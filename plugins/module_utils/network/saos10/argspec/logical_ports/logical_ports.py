#
# -*- coding: utf-8 -*-
# Copyright 2025 Ciena
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The arg spec for the saos10_logical-ports module
"""
from __future__ import absolute_import, division, print_function


__metaclass__ = type


class LogicalPortsArgs(object):  # pylint: disable=R0903
    """The arg spec for the saos10_logical-ports module"""

    def __init__(self, **kwargs):
        pass

    argument_spec = {
        "config": {
            "type": "list",
            "elements": "dict",
            "options": {
                "name": {"type": "str", "required": True},
                "description": {"type": "str"},
                "admin_state": {"type": "str", "choices": ["disable", "enable"]},
                "binding": {"type": "str"},
                "broadcast_pfg_group": {
                    "type": "str",
                    "choices": [
                        "leaf",
                        "root",
                        "dynamic",
                        "mesh",
                        "spoke",
                        "group-A",
                        "group-B",
                        "group-C",
                        "group-D",
                        "hub",
                        "rx-hub-tx-spoke",
                        "rx-spoke-tx-hub",
                    ],
                },
                "cfm_up_mep_frame_rx": {"type": "str", "choices": ["always-on", "logical-port-oper-up-only"]},
                "cos_to_frame_map": {"type": "str"},
                "egress_qos": {"type": "str", "choices": ["off", "on"]},
                "fixed_color": {"type": "str", "choices": ["green", "yellow", "red"]},
                "fixed_cos": {"type": "int"},
                "flood_containment_profile": {"type": "str"},
                "frame_to_cos_map": {"type": "str"},
                "frame_to_cos_map_policy": {
                    "type": "str",
                    "choices": ["outer-tag", "inner-tag", "dscp", "outer-mpls-tc"],
                },
                "inner_tpid": {"type": "list", "elements": "str", "choices": ["tpid-8100", "tpid-88a8", "tpid-9100"]},
                "known_multicast_pfg_group": {
                    "type": "str",
                    "choices": [
                        "leaf",
                        "root",
                        "dynamic",
                        "mesh",
                        "spoke",
                        "group-A",
                        "group-B",
                        "group-C",
                        "group-D",
                        "hub",
                        "rx-hub-tx-spoke",
                        "rx-spoke-tx-hub",
                    ],
                },
                "known_unicast_pfg_group": {
                    "type": "str",
                    "choices": [
                        "leaf",
                        "root",
                        "dynamic",
                        "mesh",
                        "spoke",
                        "group-A",
                        "group-B",
                        "group-C",
                        "group-D",
                        "hub",
                        "rx-hub-tx-spoke",
                        "rx-spoke-tx-hub",
                    ],
                },
                "meter_profile": {"type": "str"},
                "mtu": {"type": "int"},
                "outer_tpid": {"type": "list", "elements": "str", "choices": ["tpid-8100", "tpid-88a8", "tpid-9100"]},
                "pfg_group": {
                    "type": "str",
                    "choices": [
                        "leaf",
                        "root",
                        "dynamic",
                        "mesh",
                        "spoke",
                        "group-A",
                        "group-B",
                        "group-C",
                        "group-D",
                        "hub",
                        "rx-hub-tx-spoke",
                        "rx-spoke-tx-hub",
                    ],
                },
                "pfg_profile": {"type": "str"},
                "stats_collection": {"type": "str", "choices": ["on", "off"]},
                "unknown_multicast_pfg_group": {
                    "type": "str",
                    "choices": [
                        "leaf",
                        "root",
                        "dynamic",
                        "mesh",
                        "spoke",
                        "group-A",
                        "group-B",
                        "group-C",
                        "group-D",
                        "hub",
                        "rx-hub-tx-spoke",
                        "rx-spoke-tx-hub",
                    ],
                },
                "unknown_unicast_pfg_group": {
                    "type": "str",
                    "choices": [
                        "leaf",
                        "root",
                        "dynamic",
                        "mesh",
                        "spoke",
                        "group-A",
                        "group-B",
                        "group-C",
                        "group-D",
                        "hub",
                        "rx-hub-tx-spoke",
                        "rx-spoke-tx-hub",
                    ],
                },
            },
        },
        "state": {"type": "str", "default": "merged", "choices": ["merged", "deleted"]},
    }  # pylint: disable=C0301
