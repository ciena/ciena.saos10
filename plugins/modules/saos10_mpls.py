#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2025 Ciena
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for saos10_mpls
"""

from __future__ import absolute_import, division, print_function

__metaclass__ = type


DOCUMENTATION = """
---
module: saos10_mpls
short_description: MPLS config container.Manage the mpls configuration of a Ciena saos10 device
description: MPLS config container.
author: Ciena
options:
  config:
    description: MPLS config container.
    type: dict
    suboptions:
      interfaces:
        description: MPLS interfaces Container.
        type: dict
        suboptions:
          interface:
            description: MPLS interface list.
            type: list
            elements: dict
            suboptions:
              label_switching:
                description: Deprecated; Disabling MPLS label switching. Obsolete next release. MPLS label switching is always enabled on an interface.
                type: bool
                required: false
              name:
                description: 'MPLS interface name. (Key for list: interface)'
                type: str
                required: true
            key: name
      label_management:
        description: Label peoperties management container
        type: dict
        suboptions:
          allocation_mode:
            description: MPLS Label allocation mode
            type: dict
            suboptions:
              all_vrfs:
                description: MPLS Label allocation mode for all VRFs
                type: dict
                suboptions:
                  address_family:
                    description: MPLS Label allocation for address families
                    type: list
                    elements: dict
                    suboptions:
                      af_type:
                        description: 'MPLS Label allocation for given address family (Key for list: address-family)'
                        type: str
                        required: true
                        choices:
                        - ipv4
                        - ipv6
                      mode:
                        description: MPLS Label allocation mode.
                        type: str
                        required: false
                        choices:
                        - per-prefix
                        - per-vrf
                    key: af-type
              vrf:
                description: MPLS Label allocation mode for selected VRF
                type: list
                elements: dict
                suboptions:
                  address_family:
                    description: MPLS Label allocation for address families
                    type: list
                    elements: dict
                    suboptions:
                      af_type:
                        description: 'MPLS Label allocation for given address family (Key for list: address-family)'
                        type: str
                        required: true
                        choices:
                        - ipv4
                        - ipv6
                      mode:
                        description: MPLS Label allocation mode.
                        type: str
                        required: false
                        choices:
                        - per-prefix
                        - per-vrf
                    key: af-type
                  name:
                    description: 'VPN Routing/Forwarding instance name (Key for list: vrf)'
                    type: str
                    required: true
                key: name
          label_blocks:
            description: MPLS label blocks container.
            type: dict
            suboptions:
              label_block:
                description: List of MPLS protocol label range.
                type: list
                elements: dict
                suboptions:
                  index:
                    description: 'A user-specified identifier utilised to uniquely reference an MPLS label block. (Key for list: label-block)'
                    type: int
                    required: true
                  protocol:
                    description: List of MPLS protocols.
                    type: list
                    elements: dict
                    suboptions:
                      end_label:
                        description: Protocol label-block end.
                        type: int
                        required: true
                      name:
                        description: 'MPLS protocols name. (Key for list: protocol)'
                        type: str
                        required: true
                        choices:
                        - ldp
                        - bgp
                        - default
                        - rsvp
                        - srgb
                        - srlb
                        - static-vc
                        - static-tunnel
                      start_label:
                        description: Protocol label-block start.
                        type: int
                        required: true
                    key: name
                key: index
      tunnel_statistics:
        description: MPLS tunnel statistics container.
        type: dict
        suboptions:
          entry:
            description: MPLS stats entry list.
            type: list
            elements: dict
            suboptions:
              fec_address:
                description: 'MPLS stats fec Address. (Key for list: entry)'
                type: str
                required: true
              owner:
                description: 'Protocol Owner Name. (Key for list: entry)'
                type: str
                required: true
                choices:
                - ldp
                - bgp
                - bgp_lu
                - sr
              role:
                description: 'MPLS role can be ingress/egress/transit. (Key for list: entry)'
                type: str
                required: true
                choices:
                - ingress
                - transit
            key: fec-address role owner
  state:
    description:
    - The state of the configuration
    type: str
    choices:
    - merged
    - deleted
    default: merged

"""
EXAMPLES = """
"""

RETURN = """
before:
  description: The configuration prior to the model invocation.
  returned: always
  type: dict
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
after:
  description: The resulting configuration model invocation.
  returned: when changed
  type: dict
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
xml:
  description: The set of xml commands pushed to the remote device.
  returned: always
  type: list
  sample: ['<system xmlns="http://openconfig.net/yang/system"><config><hostname>foo</hostname></config></system>']
"""

from ansible.module_utils.basic import AnsibleModule
from ansible_collections.ciena.saos10.plugins.module_utils.network.saos10.argspec.mpls.mpls import (
    MplsArgs,
)
from ansible_collections.ciena.saos10.plugins.module_utils.network.saos10.config.mpls.mpls import (
    Mpls,
)


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=MplsArgs.argument_spec, supports_check_mode=True)

    result = Mpls(module).execute_module()
    module.exit_json(**result)


if __name__ == "__main__":
    main()
