#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2025 Ciena
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for saos10_logical-ports
"""

from __future__ import absolute_import, division, print_function

__metaclass__ = type


DOCUMENTATION = """
---
module: saos10_logical_ports
short_description: List of logical-ports.Manage the logical_ports logical_port configuration of a Ciena saos10 device
description: "List of logical-ports.\n List of logical-ports. A Logical-Port can be mapped to an ETTP for a physical faceplate port, virtual-port\
  \ etc. or it may map to multiple ETTPs in support of Agg Ports."
author: Ciena
options:
  config:
    description: List of logical-ports. A Logical-Port can be mapped to an ETTP for a physical faceplate port, virtual-port etc. or it may map
      to multiple ETTPs in support of Agg Ports.
    type: list
    elements: dict
    suboptions:
      description:
        description: List of logical ports.
        type: str
        required: false
      admin_state:
        description: Enable or disable this logical-port
        type: str
        required: false
        choices:
        - disable
        - enable
      binding:
        description: Bind the logical-port to an interface.
        type: str
        required: false
      broadcast_pfg_group:
        description: The Private-Forwarding-Group that the broadcast traffic ingressing a logical-port belongs to for the scope of a Private-Forwarding-Group-Profile.
        type: str
        required: false
        choices:
        - leaf
        - root
        - dynamic
        - mesh
        - spoke
        - group-A
        - group-B
        - group-C
        - group-D
        - hub
        - rx-hub-tx-spoke
        - rx-spoke-tx-hub
      cfm_up_mep_frame_rx:
        description: Specifies if cfm up mep frame rx is enabled or disabled when logical port operational status is down
        type: str
        required: false
        choices:
        - always-on
        - logical-port-oper-up-only
      cos_to_frame_map:
        description: Internal cos/color to external frame mapping associated with this logical-port.
        type: str
        required: false
      egress_qos:
        description: Egress traffic quality of service of this logical-port.
        type: str
        required: false
        choices:
        - 'off'
        - 'on'
      fixed_color:
        description: The internal-color value to use for an incoming frame when there is no mapping through a frame-to-cos-map.
        type: str
        required: false
        choices:
        - green
        - yellow
        - red
      fixed_cos:
        description: The internal-COS value to use for an incoming frame when there is no mapping through a frame-to-cos-map.
        type: int
        required: false
      flood_containment_profile:
        description: Flood-containment-profiles referenced by this logical-port.
        type: str
        required: false
      frame_to_cos_map:
        description: External frame to internal cos/color mapping associated with this logical-port.
        type: str
        required: false
      frame_to_cos_map_policy:
        description: Frame-to-cos-map policy on this logical-port.
        type: str
        required: false
        choices:
        - outer-tag
        - inner-tag
        - dscp
        - outer-mpls-tc
      inner_tpid:
        description: A list of valid inner-vlan-tag TPIDs for the port.
        type: list
        elements: str
        choices:
        - tpid-8100
        - tpid-88a8
        - tpid-9100
      known_multicast_pfg_group:
        description: The Private-Forwarding-Group that the known-multicast traffic ingressing a logical-port belongs to for the scope of a Private-Forwarding-Group-Profile.
        type: str
        required: false
        choices:
        - leaf
        - root
        - dynamic
        - mesh
        - spoke
        - group-A
        - group-B
        - group-C
        - group-D
        - hub
        - rx-hub-tx-spoke
        - rx-spoke-tx-hub
      known_unicast_pfg_group:
        description: The Private-Forwarding-Group that the known-unicast traffic ingressing a logical-port belongs to for the scope of a Private-Forwarding-Group-Profile.
        type: str
        required: false
        choices:
        - leaf
        - root
        - dynamic
        - mesh
        - spoke
        - group-A
        - group-B
        - group-C
        - group-D
        - hub
        - rx-hub-tx-spoke
        - rx-spoke-tx-hub
      meter_profile:
        description: A reference to a Meter Profile.
        type: str
        required: false
      mtu:
        description: The size in bytes of the maximum transmission unit.
        type: int
        required: false
      name:
        description: 'This object indicates the identifier and is a text string that is used to identify a logical port. Unique string values
          are chosen to uniquely identify the port. Octet values of 0x00 through 0x1f are illegal. MEF 26.1 restricts the maximum size identifiers
          to 45 octets. (Key for list: logical-port)'
        type: str
        required: true
      outer_tpid:
        description: A list of valid outer-vlan-tag TPIDs for the port.
        type: list
        elements: str
        choices:
        - tpid-8100
        - tpid-88a8
        - tpid-9100
      pfg_group:
        description: The Private-Forwarding-Group that all traffic ingressing a logical-port belongs to for the scope of a Private-Forwarding-Group-Profile.
        type: str
        required: false
        choices:
        - leaf
        - root
        - dynamic
        - mesh
        - spoke
        - group-A
        - group-B
        - group-C
        - group-D
        - hub
        - rx-hub-tx-spoke
        - rx-spoke-tx-hub
      pfg_profile:
        description: Reference to a Private Forwarding Group Profile.
        type: str
        required: false
      stats_collection:
        description: Determines whether stats collection will be turned on or not for a logical-port
        type: str
        required: false
        choices:
        - 'on'
        - 'off'
      unknown_multicast_pfg_group:
        description: The Private-Forwarding-Group that the unknown-multicast traffic ingressing a logical-port belongs to for the scope of a Private-Forwarding-Group-Profile.
        type: str
        required: false
        choices:
        - leaf
        - root
        - dynamic
        - mesh
        - spoke
        - group-A
        - group-B
        - group-C
        - group-D
        - hub
        - rx-hub-tx-spoke
        - rx-spoke-tx-hub
      unknown_unicast_pfg_group:
        description: The Private-Forwarding-Group that the unknown-unicast traffic ingressing a logical-port belongs to for the scope of a Private-Forwarding-Group-Profile.
        type: str
        required: false
        choices:
        - leaf
        - root
        - dynamic
        - mesh
        - spoke
        - group-A
        - group-B
        - group-C
        - group-D
        - hub
        - rx-hub-tx-spoke
        - rx-spoke-tx-hub
    key: name
  state:
    description:
    - The state of the configuration
    type: str
    choices:
    - merged
    default: merged

"""
EXAMPLES = """
# Using merged

- name: Configure logical port
  ciena.saos10.saos10_logical_ports:
    config:
      - name: 1
        description: foo
        admin_state: disable
    state: merged
"""

RETURN = """
before:
  description: The configuration prior to the model invocation.
  returned: always
  type: dict
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
after:
  description: The resulting configuration model invocation.
  returned: when changed
  type: dict
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
xml:
  description: The set of xml commands pushed to the remote device.
  returned: always
  type: list
  sample: ['<system xmlns="http://openconfig.net/yang/system"><config><hostname>foo</hostname></config></system>']
"""

from ansible.module_utils.basic import AnsibleModule
from ansible_collections.ciena.saos10.plugins.module_utils.network.saos10.argspec.logicalports.logicalports import (
    LogicalPortsArgs,
)
from ansible_collections.ciena.saos10.plugins.module_utils.network.saos10.config.logicalports.logicalports import (
    LogicalPorts,
)


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=LogicalPortsArgs.argument_spec, supports_check_mode=True)

    result = LogicalPorts(module).execute_module()
    module.exit_json(**result)


if __name__ == "__main__":
    main()
