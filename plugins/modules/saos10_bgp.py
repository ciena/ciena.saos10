#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2025 Ciena
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for saos10_bgp
"""

from __future__ import absolute_import, division, print_function

__metaclass__ = type


DOCUMENTATION = """
---
module: saos10_bgp
short_description: Manage bgp on Ciena saos10 devices
description: Top level bgp container for bgp configuration
author: Ciena
options:
  config:
    description: Top level bgp list with maximum number of instances 1
    type: list
    elements: dict
    suboptions:
      address_family:
        description: List BGP address family that takes AFI and SAFI related configuration
        type: list
        elements: dict
        suboptions:
          additional_paths:
            description: Container to configure additional path attributes for a peer.
            type: dict
            suboptions:
              type:
                description: Send/Receive additional paths to/from peers. Parameters relating to the advertisement and receipt of multiple paths
                  for a single NLRI (add-paths)
                type: str
                required: false
              best_count:
                description: Best <2-3> paths in additional paths to be selected
                type: int
                required: false
              install:
                description: Enabled BGP pic to install indirect nexthops into RIB
                type: bool
                required: false
              select_all:
                description: Enable BGP add-path advertisement
                type: bool
                required: false
          afi:
            description: Enter the IPv4, or VPNv4 address family mode allowing configuration of address-family specific parameters (address-family
              list key)
            type: str
            required: true
            choices:
            - ipv4
            - ipv6
            - vpnv4
            - vpnv6
            - rtfilter
            - l2vpn
            - link-state
            - all
          aggregate_address:
            description: Configure BGP aggregate entries to to minimize the size of routing tables
            type: list
            elements: dict
            suboptions:
              address:
                description: Aggregate-prefix in prefix/length format (aggregate-address list key)
                type: str
                required: true
              as_set:
                description: As-set path parameter includes AS PATH information in summaries or aggregate routes. Creates an aggregate address
                  with a mathematical set of autonomous systems (ASs). It summarizes the AS_PATH attributes of all the individual routes
                type: bool
                required: false
              summary_only:
                description: Summary-only path parameter advertises the prefix only, suppressing the more-specific routes to all peers.
                type: bool
                required: false
          allocate_label:
            description: Container to configure allocate-label attributes.
            type: dict
            suboptions:
              all:
                description: Allocate label for all routes
                type: bool
                required: false
              implicit_null:
                description: Enable PHP for local originated routes (network or redistribution of connected routes
                type: bool
                required: false
              policy:
                description: Allocate label for the routes specified by the route map
                type: str
                required: false
          auto_summary:
            description: Enables sending summarized routes by a BGP speaker to its peers. Auto-summary can be enabled if certain routes have already
              been advertised; in this case, configuring auto-summary advertises the summarized routes first, then corresponding non-summarized
              routes are withdrawn.
            type: bool
            required: false
          network:
            description: Specify the network to be advertised by the BGP routing process
            type: list
            elements: dict
            suboptions:
              address:
                description: Network address to be announced in prefix/length format (network list key)
                type: str
                required: true
              policy:
                description: Routing Policy to apply to network
                type: str
                required: false
          network_synchronization:
            description: Enables IGP synchronization of BGP networked routes.
            type: bool
            required: false
          pic:
            description: Enable/disable additional path installed for BGP route
            type: bool
            required: false
          redistribute:
            description: Inject routes from one routing process into another. Redistribution is used by routing protocols to advertise routes
              that are learned by some other means, such as by another routing protocol or by static routes
            type: list
            elements: dict
            suboptions:
              instance:
                description: Redistribute the routes from a specific OSPF/ISIS instance
                type: list
                elements: dict
                suboptions:
                  policy:
                    description: Routing Policy to apply during redistribution
                    type: str
                    required: false
                  tag:
                    description: Tag could be instance id of OSPFv2, OSPFv3 or ISIS (instance list key)
                    type: str
                    required: true
              policy:
                description: Routing Policy to apply during redistribution
                type: str
                required: false
              protocol:
                description: Protocol to redistribute into BGP (redistribute list key)
                type: str
                required: true
                choices:
                - kernel
                - connected
                - static
                - rip
                - isis
                - ospf
          route_reflector:
            description: Configure as route reflector for an address family
            type: bool
            required: false
          safi:
            description: Configure sub address family such as unicast (address-family list key)
            type: str
            required: true
            choices:
            - unicast
            - multicast
            - labeled-unicast
            - l2vpn-vpls
            - evpn
            - vpn-unicast
            - rtfilter-unicast
            - link-state
            - all
          segment_routing:
            description: BGP SR enable/disable
            type: str
            required: false
            choices:
            - enable
            - disable
          segment_routing_srv6:
            description: No description available
            type: dict
            suboptions:
              locator:
                description: locator name
                type: str
                required: false
          synchronization:
            description: Perform IGP synchronization. Enables IGP synchronization of Internal BGP (iBGP) learned routes with the Internal Gateway
              Protocol (IGP) system. Synchronization is used when a BGP router should not advertise routes learned from iBGP neighbors, unless
              those routes are also present in an IGP (for example, OSPF).
            type: bool
            required: false
          table_map:
            description: Suppresses or modifies incoming BGP updates to Routing table installation based on the routing policy configured.
            type: dict
            suboptions:
              filter:
                description: Filter the routes. If present, the incoming routes are pruned as per the rule specified in route-map-name. If not,
                  it is used to alter the incoming packet information.
                type: bool
                required: false
              policy:
                description: Name of the routemap to apply the filter to.
                type: str
                required: false
      aigp_threshold:
        description: Readvertise AIGP value when IGP metric has increased/decreased beyond configured threshold percentage. Any IGP metric change
          within threshold percentage should not lead to AIGP re-advertisement. Value 0 indicates threshold is disabled and any IGP metric change
          should lead to readvertisement of AIGP value.
        type: int
        required: false
      as:
        description: Local autonomous system number. Uses the 32-bit as-number type from the model in RFC 6991. (instance list key)
        type: int
        required: true
      cluster_id:
        description: BGP route reflector cluster ID route-reflector cluster id to use when local router is configured as a route reflector. Commonly
          set at the group level, but allows a different cluster id to be set for each peer.
        type: str
        required: false
      extended_asn_cap:
        description: BGP ASN 4 bytes capability enable for BGP instance. It can be enabled with BGP as instance number more than 65535, all peers
          will be reset when modified.
        type: bool
        required: false
      fast_external_failover:
        description: Reset a BGP session immediately, if the interface used for BGP connection goes down.
        type: bool
        required: false
      graceful_restart:
        description: Container to enable graceful restart.
        type: dict
        suboptions:
          deferral_time:
            description: The maximum time a router which is restarting, will defer route-selection and advertisements to all its graceful-restart
              capable neighbors.
            type: int
            required: false
          enable:
            description: Enable graceful-restart capabilities.
            type: bool
            required: false
          restart_time:
            description: Estimated time (in seconds) for the local BGP speaker to restart a session. This value is advertised in the graceful
              restart BGP capability. This is a 12-bit value, referred to as Restart Time in RFC4724.
            type: int
            required: false
          stalepath_time:
            description: Maximum time to retain stale paths from restarting neighbors.
            type: int
            required: false
      hold_time:
        description: BGP holdtime 0|<1-65535> Time interval in seconds that a BGP session will be considered active in the absence of keepalive
          or other messages from the peer. The hold-time is typically set to 3x the keepalive-interval.
        type: int
        required: false
      inbound_route_filter:
        description: Enable the MPLS (Multiprotocol Label Switching) VPN/BGP inbound route filter. This is used to control the installation of
          routing information into the BGP table.
        type: bool
        required: false
      keepalive_interval:
        description: BGP keepalive time 0|<1-65535> Time interval in seconds between transmission of keepalive messages to the peer. Typically
          set to 1/3 the hold-time.
        type: int
        required: false
      l2vpn_vpls:
        description: L2VPN VPLS list containing L2VPN instance related configuration such as RD, RT and VPLS ID
        type: list
        elements: dict
        suboptions:
          name:
            description: L2VPN services instance name. (l2vpn-vpls list key)
            type: str
            required: true
          route_distinguisher:
            description: Route distinguisher value. It uniquely generates L2VPN NLRI.
            type: str
            required: false
          route_target:
            description: Route target list that takes route target id and direction
            type: list
            elements: dict
            suboptions:
              direction:
                description: Route-target direction, that can be imported/exported for that particular route target ID.
                type: str
                required: true
                choices:
                - import
                - export
                - both
              id:
                description: Route-target ID. Creates lists of import and export route-target extended communities for the L2VPN instance. It
                  specifies a target VPN extended community. Execute the once for each community. All routes with the specific route-target extended
                  community are imported into all L2VPN instances with the same extended community as an import route-target. (route-target list
                  key)
                type: str
                required: true
          vpls_id:
            description: A VPLS ID is a BGP extended community value that identifies the VPLS domain. Manual configuration of this ID is optional
              because a default VPLS ID is generated using the BGP autonomous system number and the configured VPN ID. A VPLS ID can be composed
              in one of three ways; with an autonomous system number and an arbitrary number or with an IP address and an arbitrary number. For
              example; •Enter type 0, a colon, a 16-bit autonomous system number, a colon, and a 32-bit number. 0;45000;3 or •Enter type 1, a
              colon , a 32-bit IP address, a colon, and a 16-bit number. 1;192.168.10.15;1 or •Enter type 2, a colon, a 32-bit autonomous system
              number, a colon, and a 16-bit number. 2;65536;3 .
            type: str
            required: false
      local_preference:
        description: BGP default local preference <0-4294967295> ,default value is 100 Local preference indicates the preferred path when there
          are multiple paths to the same destination
        type: int
        required: false
      log_peer_changes:
        description: Configure logging of peer state changes. Default is to enable logging of peer state changes.
        type: bool
        required: false
      mpls_resolution:
        description: Enable MPLS LSP resolution for BGP prefixes
        type: bool
        required: false
      next_hop_tracking:
        description: Container to enable next hop tracking
        type: dict
        suboptions:
          delay:
            description: The delay interval between routing table walks for nexthop delay tracking, after which BGP does a routing table scan
              on receiving a nexthop change trigger for nexthop updates. The time period determines how long BGP waits before it walks the full
              BGP table to determine which prefixes are affected by the nexthop changes, after it receives the trigger for nexthoop updates about
              one or more nexthop changes.
            type: int
            required: false
          enable:
            description: Nexthop address tracking is an event-driven notification system that monitors the status of routes installed in the Routing
              Information Base (RIB) and reports nexthop changes that affect internal BGP (iBGP) or external BGP (eBGP) prefixes directly to the
              BGP process. This improves the overall BGP convergence time, by allowing BGP to respond rapidly to nexthop changes for routes installed
              in the RIB. Default delay is 5 seconds
            type: bool
            required: false
      peer:
        description: List of peers with peer related configuration
        type: list
        elements: dict
        suboptions:
          description:
            description: An optional textual description (intended primarily for use with a peer or group
            type: str
            required: false
          address:
            description: Address of the BGP peer, either in IPv4 or IPv6 (peer list key)
            type: str
            required: true
          address_family:
            description: Peer address family configuration such as vpnv4 unicast
            type: list
            elements: dict
            suboptions:
              activate:
                description: Whether the BGP peer is enabled. In cases where the enabled leaf is set to false, the local system should not initiate
                  connections to the neighbor, and should not respond to TCP connections attempts from the neighbor. If the state of the BGP session
                  is ESTABLISHED at the time that this leaf is set to false, the BGP session should be ceased.
                type: bool
                required: false
              additional_paths:
                description: Container to configure additional path attributes for a peer.
                type: dict
                suboptions:
                  type:
                    description: Send/Receive additional paths to/from peers. Parameters relating to the advertisement and receipt of multiple
                      paths for a single NLRI (add-paths)
                    type: str
                    required: false
                    choices:
                    - receive
                    - send
                    - send-receive
                    - disable
                  best_count:
                    description: Best <2-3> paths in additional paths to be selected
                    type: int
                    required: false
                  select_all:
                    description: Enable BGP add-path advertisement
                    type: bool
                    required: false
              advertise_ip_prefix:
                description: Advertise VPNv4/VPNv6 prefixes (route type 5) under L2VPN EVPN address family. BGP neighbors need to be cleared to
                  take effect.
                type: list
                elements: dict
                suboptions:
                  afi:
                    description: VPNv4/VPNv6 address family (advertise-ip-prefix list key)
                    type: str
                    required: true
                    choices:
                    - vpnv4
                    - vpnv6
              afi:
                description: IPv4, or VPNv4 address family mode allowing configuration of address-family specific parameters (address-family list
                  key)
                type: str
                required: true
              aigp:
                description: AIGP behavior for the specified BGP neighbor or peer group of the specified BGP instance (identified by AS number)
                  and address family.
                type: dict
                suboptions:
                  enable:
                    description: To enable AIGP for a specific peer or peer-group.
                    type: bool
                    required: false
                  send:
                    description: Container for AIGP send. The send attribute is used to interop with neighbor that does not support BGP AIGP metric
                      attribute, by translating the AIGP metric of a routes to either MED or cost-community when such route is to be advertised
                      towards the neighbor.
                    type: dict
                    suboptions:
                      community:
                        description: To enable translation of AIGP value to cost-community value for the neighbor.
                        type: dict
                        suboptions:
                          cost:
                            description: AIGP value to cost-community value for the neighbor.
                            type: int
                            required: false
                          point_of_insertion:
                            description: Specifies the point of insertion, which can be either igp-cost or pre-bestpath when selecting BGP best
                              path.
                            type: str
                            required: false
                            choices:
                            - pre-bestpath
                            - igp-cost
                          transitive:
                            description: Enable transitive cost community.
                            type: bool
                            required: false
                      med:
                        description: To enable translation of AIGP value to MED(Multi Exit Discriminator) value for the neighbor.
                        type: bool
                        required: false
              allow_as_in:
                description: Ebgp Peers only. Allow AS number <1-10> advertise prefixes (routes) even when the source of the prefixes is from
                  the same Autonomous System (AS) number.
                type: int
                required: false
              allow_ebgp_sr:
                description: EBGP Peers only. Allow/Forbid prefix SID attribute
                type: str
                required: false
                choices:
                - enable
                - disable
              allow_ebgp_vpn:
                description: Ebgp Peers only. Allow VPN Routes
                type: bool
                required: false
              attribute_unchanged:
                description: Advertise unchanged BGP attributes to the specified peer.
                type: str
                required: false
              default_originate:
                description: The default originate is used to indicate that all routes be sent regardless of the Route Target filter values.
                type: bool
                required: false
              default_originate_vpn:
                description: Container to configure default-originate options for VPN address families.
                type: dict
                suboptions:
                  vrf:
                    description: VRF list containing VRF related configuration for default-originate
                    type: list
                    elements: dict
                    suboptions:
                      name:
                        description: VRF binding to which the default route needs to be originated. (vrf list key)
                        type: str
                        required: true
              graceful_restart_helper:
                description: Configure the router to advertise the Graceful Restart Capability to the neighbors. This configuration indicates
                  that the BGP speaker has the ability to preserve its forwarding state for the address family when BGP restarts.
                type: str
                required: false
                choices:
                - disable
                - enable
              next_hop_self:
                description: Configure the router as the next hop for a BGP-speaking peer or peer group
                type: bool
                required: false
              orf_mode:
                description: Enables Outbound Router Filtering (ORF) and advertises the ORF capability to its neighbors. The ORFs send and receive
                  capabilities to lessen the number of updates exchanged between neighbors. By filtering updates, this option minimizes generating
                  and processing of updates.
                type: str
                required: false
                choices:
                - both
                - receive
                - send
              policy:
                description: Routing policy to be attached to this peer.
                type: list
                elements: dict
                suboptions:
                  direction:
                    description: The direction of application of the route map policy applies for the peer. (policy list key)
                    type: str
                    required: true
                    choices:
                    - in
                    - out
                  name:
                    description: Route map name associated with the leaf (policy list key)
                    type: str
                    required: true
              prefix_limit:
                description: Configure the maximum number of prefixes that will be accepted from a peer
                type: dict
                suboptions:
                  drop_excess:
                    description: Indicates the percentage of the maximum prefix-limit value, which when exceeded, the excess routes are dropped
                    type: float
                    required: false
                  idle_timeout:
                    description: Idle-timeout (minimum 1 to maximum 2400 minutes) specifies the time period after which the session is allowed
                      to re-establish. The value 0 represents no attempt to re-establish the session until a clear bgp neighbor command is issued
                      to manually re-establish the session.
                    type: int
                    required: false
                  maximum_prefixes:
                    description: Maximum number of prefixes <1-4294967295> Maximum number of prefixes that will be accepted from the neighbour
                    type: int
                    required: false
                  teardown_threshold:
                    description: Teardown percentage value <1-100> Warning messages are logged and alerted to the admin when the number of prefixes
                      exceeds this configured percentage of the maximum prefix limit.
                    type: float
                    required: false
                  warning_only:
                    description: Using this option does not teardown the session, but instead throws a notification warning that the threshold
                      has reached.
                    type: bool
                    required: false
              prefix_list:
                description: Container to attach prefix list to the neighbor
                type: list
                elements: dict
                suboptions:
                  direction:
                    description: Direction of the filter (0=FILTER-IN |1=FILTER-OUT) (prefix-list list key)
                    type: str
                    required: true
                  name:
                    description: Prefix List name. specify a prefix list for filtering BGP advertisements. (prefix-list list key)
                    type: str
                    required: true
              remove_private_as:
                description: Remove private AS numbers from the outbound updates and do not advertise these to the internet. This command is used
                  with eBgp peers only.
                type: bool
                required: false
              route_reflector_client:
                description: Configure the peer as a route reflector client.
                type: bool
                required: false
              safi:
                description: Configure sub address family such as unicast (address-family list key)
                type: str
                required: true
              soft_reconfiguration_inbound:
                description: Store updates for inbound soft reconfiguration. Soft-reconfiguration may be used in lieu of BGP route refresh capability.
                  Using this enables local storage of all the received routes and their attributes.
                type: bool
                required: false
              unsuppress:
                description: Selectively leak more-specific routes to a particular neighbor.
                type: dict
                suboptions:
                  policy:
                    description: Route map name associated with the leaf
                    type: str
                    required: false
          bfd:
            description: Configure bidirectional forwarding detection for BGP
            type: dict
            suboptions:
              enable:
                description: Enable BFD for BGP.
                type: bool
                required: false
              multihop:
                description: Configure multihop IP BFD for BGP.
                type: bool
                required: false
          connect_retry_interval:
            description: Time interval in seconds between attempts to establish a session with the peer.
            type: int
            required: false
          ebgp_multihop:
            description: Configuration parameters relating to ebgp multihop
            type: dict
            suboptions:
              enabled:
                description: When enabled the referenced group or peers are permitted to be indirectly connected - including cases where the TTL
                  can be decremented between the BGP peers
                type: bool
                required: false
              multihopttl:
                description: Time-to-live value to use when packets are sent to the referenced group or peers and ebgp-multihop is enabled
                type: int
                required: false
          graceful_restart:
            description: Container to enable graceful restart.
            type: dict
            suboptions:
              restart_time:
                description: Estimated time (in seconds) for the local BGP speaker to restart a session. This value is advertised in the graceful
                  restart BGP capability. This is a 12-bit value, referred to as Restart Time in RFC4724.
                type: int
                required: false
          hold_time:
            description: Holdtime BGP holdtime 0|<3-65535> Time interval in seconds that a BGP session will be considered active in the absence
              of keepalive or other messages from the peer. The hold-time is typically set to 3x the keepalive-interval.
            type: int
            required: false
          keepalive_interval:
            description: BGP keepalive time 0|<1-21845> Time interval in seconds between transmission of keepalive messages to the peer. Typically
              set to 1/3 the hold-time.
            type: int
            required: false
          local_as:
            description: The local-AS feature allows a router to appear to be a member of a second autonomous system (AS), in addition to its
              real AS. This feature can only be used for true eBGP peers.
            type: int
            required: false
          local_as_options:
            description: Local-as options; no-prepend - not prepend local-as to incoming updates from eBGP peers. replace-as - not prepend true-as
              to outgoing updates to eBGP peers.
            type: str
          lockout:
            description: BGP lockout feature is useful to inform/force its peer to avoid itself for any traffic for prefixes it has advertised
              to its neighbors. When a BGP neighbor (or through peer group) is locked out 1 iBGP routes are refreshed to the iBGP peer(s) with
              the path attribute changed to the lowest possible local preference (0) 2 eBGP routes advertised to the eBGP peer(s) are refreshed
              with the path attribute changed to highest possible MED (4294967295).
            type: bool
            required: false
          minimum_advertisement_interval:
            description: Minimum route advertisement interval <0-65535> Minimum time which must elapse between subsequent UPDATE messages relating
              to a common set of NLRI being transmitted to a peer. This timer is referred to as min-route-advertisement-interval-timer by RFC
              4721 and serves to reduce the number of UPDATE messages transmitted when a particular set of NLRI exhibit instability.
            type: int
            required: false
          passive:
            description: Wait for peers to issue requests to open a BGP session, rather than initiating sessions from the local router.
            type: bool
            required: false
          password:
            description: Configures an MD5 authentication password for use with peering devices. Must not exceed 80 characters.
            type: str
            required: false
          peer_group:
            description: Peer group configuration to be attached to this peer
            type: str
            required: false
          remote_as:
            description: Remote AS number for this peer
            type: int
            required: false
          shutdown:
            description: Terminate any active session for a specified peer and clear all related routing information. For peer groups large number
              of peering sessions will be terminated.
            type: bool
            required: false
          update_source_interface:
            description: Allows internal BGP sessions to use any operational interface for TCP connections
            type: str
            required: false
      peer_group:
        description: List of peer groups and its related configuration
        type: list
        elements: dict
        suboptions:
          description:
            description: An optional textual description (intended primarily for use with a peer or group
            type: str
            required: false
          address_family:
            description: Peer address family configuration such as vpnv4 unicast
            type: list
            elements: dict
            suboptions:
              activate:
                description: Whether the BGP peer is enabled. In cases where the enabled leaf is set to false, the local system should not initiate
                  connections to the neighbor, and should not respond to TCP connections attempts from the neighbor. If the state of the BGP session
                  is ESTABLISHED at the time that this leaf is set to false, the BGP session should be ceased.
                type: bool
                required: false
              additional_paths:
                description: Container to configure additional path attributes for a peer.
                type: dict
                suboptions:
                  type:
                    description: Send/Receive additional paths to/from peers. Parameters relating to the advertisement and receipt of multiple
                      paths for a single NLRI (add-paths)
                    type: str
                    required: false
                    choices:
                    - receive
                    - send
                    - send-receive
                    - disable
                  best_count:
                    description: Best <2-3> paths in additional paths to be selected
                    type: int
                    required: false
                  select_all:
                    description: Enable BGP add-path advertisement
                    type: bool
                    required: false
              advertise_ip_prefix:
                description: Advertise VPNv4/VPNv6 prefixes (route type 5) under L2VPN EVPN address family. BGP neighbors need to be cleared to
                  take effect.
                type: list
                elements: dict
                suboptions:
                  afi:
                    description: VPNv4/VPNv6 address family (advertise-ip-prefix list key)
                    type: str
                    required: true
                    choices:
                    - vpnv4
                    - vpnv6
              afi:
                description: IPv4, or VPNv4 address family mode allowing configuration of address-family specific parameters (address-family list
                  key)
                type: str
                required: true
              aigp:
                description: AIGP behavior for the specified BGP neighbor or peer group of the specified BGP instance (identified by AS number)
                  and address family.
                type: dict
                suboptions:
                  enable:
                    description: To enable AIGP for a specific peer or peer-group.
                    type: bool
                    required: false
                  send:
                    description: Container for AIGP send. The send attribute is used to interop with neighbor that does not support BGP AIGP metric
                      attribute, by translating the AIGP metric of a routes to either MED or cost-community when such route is to be advertised
                      towards the neighbor.
                    type: dict
                    suboptions:
                      community:
                        description: To enable translation of AIGP value to cost-community value for the neighbor.
                        type: dict
                        suboptions:
                          cost:
                            description: AIGP value to cost-community value for the neighbor.
                            type: int
                            required: false
                          point_of_insertion:
                            description: Specifies the point of insertion, which can be either igp-cost or pre-bestpath when selecting BGP best
                              path.
                            type: str
                            required: false
                            choices:
                            - pre-bestpath
                            - igp-cost
                          transitive:
                            description: Enable transitive cost community.
                            type: bool
                            required: false
                      med:
                        description: To enable translation of AIGP value to MED(Multi Exit Discriminator) value for the neighbor.
                        type: bool
                        required: false
              allow_as_in:
                description: Ebgp Peers only. Allow AS number <1-10> advertise prefixes (routes) even when the source of the prefixes is from
                  the same Autonomous System (AS) number.
                type: int
                required: false
              allow_ebgp_sr:
                description: EBGP Peers only. Allow/Forbid prefix SID attribute
                type: str
                required: false
                choices:
                - enable
                - disable
              allow_ebgp_vpn:
                description: Ebgp Peers only. Allow VPN Routes
                type: bool
                required: false
              attribute_unchanged:
                description: Advertise unchanged BGP attributes to the specified peer.
                type: str
                required: false
              default_originate:
                description: The default originate is used to indicate that all routes be sent regardless of the Route Target filter values.
                type: bool
                required: false
              default_originate_vpn:
                description: Container to configure default-originate options for VPN address families.
                type: dict
                suboptions:
                  vrf:
                    description: VRF list containing VRF related configuration for default-originate
                    type: list
                    elements: dict
                    suboptions:
                      name:
                        description: VRF binding to which the default route needs to be originated. (vrf list key)
                        type: str
                        required: true
              graceful_restart_helper:
                description: Configure the router to advertise the Graceful Restart Capability to the neighbors. This configuration indicates
                  that the BGP speaker has the ability to preserve its forwarding state for the address family when BGP restarts.
                type: str
                required: false
                choices:
                - disable
                - enable
              next_hop_self:
                description: Configure the router as the next hop for a BGP-speaking peer or peer group
                type: bool
                required: false
              orf_mode:
                description: Enables Outbound Router Filtering (ORF) and advertises the ORF capability to its neighbors. The ORFs send and receive
                  capabilities to lessen the number of updates exchanged between neighbors. By filtering updates, this option minimizes generating
                  and processing of updates.
                type: str
                required: false
                choices:
                - both
                - receive
                - send
              policy:
                description: Routing policy to be attached to this peer.
                type: list
                elements: dict
                suboptions:
                  direction:
                    description: The direction of application of the route map policy applies for the peer. (policy list key)
                    type: str
                    required: true
                    choices:
                    - in
                    - out
                  name:
                    description: Route map name associated with the leaf (policy list key)
                    type: str
                    required: true
              prefix_limit:
                description: Configure the maximum number of prefixes that will be accepted from a peer
                type: dict
                suboptions:
                  drop_excess:
                    description: Indicates the percentage of the maximum prefix-limit value, which when exceeded, the excess routes are dropped
                    type: float
                    required: false
                  idle_timeout:
                    description: Idle-timeout (minimum 1 to maximum 2400 minutes) specifies the time period after which the session is allowed
                      to re-establish. The value 0 represents no attempt to re-establish the session until a clear bgp neighbor command is issued
                      to manually re-establish the session.
                    type: int
                    required: false
                  maximum_prefixes:
                    description: Maximum number of prefixes <1-4294967295> Maximum number of prefixes that will be accepted from the neighbour
                    type: int
                    required: false
                  teardown_threshold:
                    description: Teardown percentage value <1-100> Warning messages are logged and alerted to the admin when the number of prefixes
                      exceeds this configured percentage of the maximum prefix limit.
                    type: float
                    required: false
                  warning_only:
                    description: Using this option does not teardown the session, but instead throws a notification warning that the threshold
                      has reached.
                    type: bool
                    required: false
              prefix_list:
                description: Container to attach prefix list to the neighbor
                type: list
                elements: dict
                suboptions:
                  direction:
                    description: Direction of the filter (0=FILTER-IN |1=FILTER-OUT) (prefix-list list key)
                    type: str
                    required: true
                  name:
                    description: Prefix List name. specify a prefix list for filtering BGP advertisements. (prefix-list list key)
                    type: str
                    required: true
              remove_private_as:
                description: Remove private AS numbers from the outbound updates and do not advertise these to the internet. This command is used
                  with eBgp peers only.
                type: bool
                required: false
              route_reflector_client:
                description: Configure the peer as a route reflector client.
                type: bool
                required: false
              safi:
                description: Configure sub address family such as unicast (address-family list key)
                type: str
                required: true
              soft_reconfiguration_inbound:
                description: Store updates for inbound soft reconfiguration. Soft-reconfiguration may be used in lieu of BGP route refresh capability.
                  Using this enables local storage of all the received routes and their attributes.
                type: bool
                required: false
              unsuppress:
                description: Selectively leak more-specific routes to a particular neighbor.
                type: dict
                suboptions:
                  policy:
                    description: Route map name associated with the leaf
                    type: str
                    required: false
          bfd:
            description: Configure bidirectional forwarding detection for BGP peer group
            type: dict
            suboptions:
              enable:
                description: Enable BFD for BGP.
                type: bool
                required: false
              multihop:
                description: Configure multihop IP BFD for BGP.
                type: bool
                required: false
          connect_retry_interval:
            description: Time interval in seconds between attempts to establish a session with the peer.
            type: int
            required: false
          ebgp_multihop:
            description: Configuration parameters relating to ebgp multihop
            type: dict
            suboptions:
              enabled:
                description: When enabled the referenced group or peers are permitted to be indirectly connected - including cases where the TTL
                  can be decremented between the BGP peers
                type: bool
                required: false
              multihopttl:
                description: Time-to-live value to use when packets are sent to the referenced group or peers and ebgp-multihop is enabled
                type: int
                required: false
          graceful_restart:
            description: Container to enable graceful restart.
            type: dict
            suboptions:
              restart_time:
                description: Estimated time (in seconds) for the local BGP speaker to restart a session. This value is advertised in the graceful
                  restart BGP capability. This is a 12-bit value, referred to as Restart Time in RFC4724.
                type: int
                required: false
          hold_time:
            description: Holdtime BGP holdtime 0|<3-65535> Time interval in seconds that a BGP session will be considered active in the absence
              of keepalive or other messages from the peer. The hold-time is typically set to 3x the keepalive-interval.
            type: int
            required: false
          keepalive_interval:
            description: BGP keepalive time 0|<1-21845> Time interval in seconds between transmission of keepalive messages to the peer. Typically
              set to 1/3 the hold-time.
            type: int
            required: false
          local_as:
            description: The local-AS feature allows a router to appear to be a member of a second autonomous system (AS), in addition to its
              real AS. This feature can only be used for true eBGP peers.
            type: int
            required: false
          local_as_options:
            description: Local-as options; no-prepend - not prepend local-as to incoming updates from eBGP peers. replace-as - not prepend true-as
              to outgoing updates to eBGP peers.
            type: str
          lockout:
            description: BGP lockout feature is useful to inform/force its peer to avoid itself for any traffic for prefixes it has advertised
              to its neighbors. When a BGP neighbor (or through peer group) is locked out 1 iBGP routes are refreshed to the iBGP peer(s) with
              the path attribute changed to the lowest possible local preference (0) 2 eBGP routes advertised to the eBGP peer(s) are refreshed
              with the path attribute changed to highest possible MED (4294967295).
            type: bool
            required: false
          minimum_advertisement_interval:
            description: Minimum route advertisement interval <0-65535> Minimum time which must elapse between subsequent UPDATE messages relating
              to a common set of NLRI being transmitted to a peer. This timer is referred to as min-route-advertisement-interval-timer by RFC
              4721 and serves to reduce the number of UPDATE messages transmitted when a particular set of NLRI exhibit instability.
            type: int
            required: false
          name:
            description: Name of the peer group template that can be attached to a peer (peer-group list key)
            type: str
            required: true
          passive:
            description: Wait for peers to issue requests to open a BGP session, rather than initiating sessions from the local router.
            type: bool
            required: false
          password:
            description: Configures an MD5 authentication password for use with peering devices. Must not exceed 80 characters.
            type: str
            required: false
          remote_as:
            description: Remote AS number for this peer group
            type: int
            required: false
          shutdown:
            description: Terminate any active session for a specified peer and clear all related routing information. For peer groups large number
              of peering sessions will be terminated.
            type: bool
            required: false
          update_source_interface:
            description: Allows internal BGP sessions to use any operational interface for TCP connections
            type: str
            required: false
      route_selection_options:
        description: Parameters relating to options for route selection
        type: dict
        suboptions:
          aigp_ignore:
            description: Ignore AIGP value for best path selection.
            type: bool
            required: false
          always_compare_med:
            description: Compare multi-exit discriminator (MED) value from different ASes when selecting the best route. The default behavior
              is to only compare MEDs for paths received from the same AS.
            type: bool
            required: false
          deterministic_med:
            description: Compares the Multi Exit Discriminator (MED) variable when choosing among routes advertised by different peers in the
              same autonomous system. MED is compared after BGP attributes weight, local preference, AS-path and origin have been compared and
              are equal.
            type: bool
            required: false
          external_compare_router_id:
            description: When comparing similar routes received from external BGP peers, use the router-id as a criterion to select the active
              path.
            type: bool
            required: false
          ignore_as_path_length:
            description: Ignore the AS path length when selecting the best path. The default is to use the AS path length and prefer paths with
              shorter length.
            type: bool
            required: false
          tie_break_on_age:
            description: Prefer old routes when compare-router-id is not set.
            type: bool
            required: false
      router_id:
        description: Router id - an unsigned 32-bit integer expressed in dotted quad notation.
        type: str
        required: false
      scan_time:
        description: Configure background scanner interval in seconds.
        type: int
        required: false
      segment_routing:
        description: Attribute for MPLS-based segment routing for a BGP process.
        type: dict
        suboptions:
          srgb:
            description: List of global blocks to be advertised.
            type: list
            elements: dict
            suboptions:
              lower_bound:
                description: Lower value in the block.
                type: int
                required: false
              upper_bound:
                description: Upper value in the block.
                type: int
                required: false
          srv6:
            description: No description available
            type: dict
            suboptions:
              locator:
                description: locator name
                type: str
                required: false
      vrf:
        description: Vrf list containing vrf related configuration such as rd, rt and peer
        type: list
        elements: dict
        suboptions:
          name:
            description: Provides bgp address family to parent VRF binding. (vrf list key)
            type: str
            required: true
          route_distinguisher:
            description: A route distinguisher is an 8-octet value used to distinguish routes from different BGP VPNs (RFC 4364). A route distinguisher
              consists of three fields; A 2-octet type field, an administrator field, and an assigned number field. According to the data formats
              for type 0, 1, and 2 defined in RFC4364, the encoding pattern is defined as; 0;2-octet-asn;4-octet-number 1;4-octet-ipv4addr;2-octet-number
              2;4-octet-asn;2-octet-number. 2-octet-other-hex-number;6-octet-hex-number Some valid examples are; 0;100;100, 1;1.1.1.1;100, and
              2;1234567890;203.
            type: str
            required: true
          route_target:
            description: Route Target list that takes route target id and direction
            type: list
            elements: dict
            suboptions:
              direction:
                description: Route-target direction, that can be imported/exported for that particular route target id.
                type: str
                required: true
                choices:
                - import
                - export
                - both
              id:
                description: A route target is an 8-octet BGP extended community initially identifying a set of sites in a BGP VPN (RFC 4364).
                  However, it has since taken on a more general role in BGP route filtering. A route target consists of three fields; a 2-octet
                  type field, an administrator field, and an assigned number field. According to the data formats for type 0, 1, and 2 defined
                  in RFC4360 and RFC5668, the encoding pattern is defined as; 0;2-octet-asn;4-octet-number 1;4-octet-ipv4addr;2-octet-number 2;4-octet-asn;2-octet-number.
                  Some valid examples are; 0;100;100, 1;1.1.1.1;100, and 2;1234567890;203. (route-target list key)
                type: str
                required: true
          vrf_address_family:
            description: List of vrf address families such as ipv4 unicast
            type: list
            elements: dict
            suboptions:
              afi:
                description: Vrf Address Family type enter the IPv4, address family mode allowing configuration of address-family specific parameters
                  (vrf-address-family list key)
                type: str
                required: true
                choices:
                - ipv4
                - ipv6
              aggregate_address:
                description: Configure BGP aggregate entries to to minimize the size of routing tables
                type: list
                elements: dict
                suboptions:
                  address:
                    description: Aggregate-prefix in prefix/length format (aggregate-address list key)
                    type: str
                    required: true
                  as_set:
                    description: As-set path parameter includes AS PATH information in summaries or aggregate routes. Creates an aggregate address
                      with a mathematical set of autonomous systems (ASs). It summarizes the AS_PATH attributes of all the individual routes
                    type: bool
                    required: false
                  summary_only:
                    description: Summary-only path parameter advertises the prefix only, suppressing the more-specific routes to all peers.
                    type: bool
                    required: false
              auto_summary:
                description: Enables sending summarized routes by a BGP speaker to its peers. Auto-summary can be enabled if certain routes have
                  already been advertised; in this case, configuring auto-summary advertises the summarized routes first, then corresponding non-summarized
                  routes are withdrawn.
                type: bool
                required: false
              network:
                description: Specify the network to be advertised by the BGP routing process
                type: list
                elements: dict
                suboptions:
                  address:
                    description: Network address to be announced in prefix/length format (network list key)
                    type: str
                    required: true
                  policy:
                    description: Routing Policy to apply to network
                    type: str
                    required: false
              network_synchronization:
                description: Enables IGP synchronization of BGP networked routes.
                type: bool
                required: false
              peer:
                description: List of vrf peer related configuration information
                type: list
                elements: dict
                suboptions:
                  description:
                    description: An optional textual description (intended primarily for use with a peer or group
                    type: str
                    required: false
                  activate:
                    description: Whether the BGP peer is enabled. In cases where the enabled leaf is set to false, the local system should not
                      initiate connections to the neighbor, and should not respond to TCP connections attempts from the neighbor. If the state
                      of the BGP session is ESTABLISHED at the time that this leaf is set to false, the BGP session should be ceased.
                    type: bool
                    required: false
                  address:
                    description: Address of the BGP peer, either in IPv4 or IPv6 (peer list key)
                    type: str
                    required: true
                  aigp:
                    description: AIGP behavior for the specified BGP neighbor or peer group of the specified BGP instance (identified by AS number)
                      and address family.
                    type: dict
                    suboptions:
                      enable:
                        description: To enable AIGP for a specific peer or peer-group.
                        type: bool
                        required: false
                      send:
                        description: Container for AIGP send. The send attribute is used to interop with neighbor that does not support BGP AIGP
                          metric attribute, by translating the AIGP metric of a routes to either MED or cost-community when such route is to be
                          advertised towards the neighbor.
                        type: dict
                        suboptions:
                          community:
                            description: To enable translation of AIGP value to cost-community value for the neighbor.
                            type: dict
                            suboptions:
                              cost:
                                description: AIGP value to cost-community value for the neighbor.
                                type: int
                                required: false
                              point_of_insertion:
                                description: Specifies the point of insertion, which can be either igp-cost or pre-bestpath when selecting BGP
                                  best path.
                                type: str
                                required: false
                                choices:
                                - pre-bestpath
                                - igp-cost
                              transitive:
                                description: Enable transitive cost community.
                                type: bool
                                required: false
                          med:
                            description: To enable translation of AIGP value to MED(Multi Exit Discriminator) value for the neighbor.
                            type: bool
                            required: false
                  allow_as_in:
                    description: Ebgp Peers only. Allow AS number <1-10> advertise prefixes (routes) even when the source of the prefixes is from
                      the same Autonomous System (AS) number.
                    type: int
                    required: false
                  allow_ebgp_vpn:
                    description: Ebgp Peers only. Allow VPN Routes
                    type: bool
                    required: false
                  as_override:
                    description: Override the Autonomous System Number (ASN) of a site with the ASN of a provider. BGP normally ignores the routes
                      from the same AS. However, this capability is used to override the customer‘s ASN in BGP, so that the customer CE accepts
                      and installs routes from the same AS.
                    type: bool
                    required: false
                  attribute_unchanged:
                    description: Advertise unchanged BGP attributes to the specified peer.
                    type: str
                    required: false
                  bfd:
                    description: Configure bidirectional forwarding detection for BGP.
                    type: dict
                    suboptions:
                      enable:
                        description: Enable BFD for BGP.
                        type: bool
                        required: false
                      multihop:
                        description: Configure multihop IP BFD for BGP.
                        type: bool
                        required: false
                  connect_retry_interval:
                    description: Time interval in seconds between attempts to establish a session with the peer.
                    type: int
                    required: false
                  ebgp_multihop:
                    description: Configuration parameters relating to ebgp multihop
                    type: dict
                    suboptions:
                      enabled:
                        description: When enabled the referenced group or peers are permitted to be indirectly connected - including cases where
                          the TTL can be decremented between the BGP peers
                        type: bool
                        required: false
                      multihop_ttl:
                        description: Time-to-live value to use when packets are sent to the referenced group or peers and ebgp-multihop is enabled
                        type: int
                        required: false
                  graceful_restart:
                    description: Container to enable graceful restart.
                    type: dict
                    suboptions:
                      restart_time:
                        description: Estimated time (in seconds) for the local BGP speaker to restart a session. This value is advertised in the
                          graceful restart BGP capability. This is a 12-bit value, referred to as Restart Time in RFC4724.
                        type: int
                        required: false
                  graceful_restart_helper:
                    description: Configure the router to advertise the Graceful Restart Capability to the neighbors. This configuration indicates
                      that the BGP speaker has the ability to preserve its forwarding state for the address family when BGP restarts.
                    type: str
                    required: false
                    choices:
                    - disable
                    - enable
                  hold_time:
                    description: Time interval in seconds that a BGP session will be considered active in the absence of keepalive or other messages
                      from the peer. The hold-time is typically set to 3x the keepalive-interval.
                    type: int
                    required: false
                  keepalive_interval:
                    description: BGP keepalive time 0|<3-65535> Time interval in seconds between transmission of keepalive messages to the peer.
                      Typically set to 1/3 the hold-time.
                    type: int
                    required: false
                  local_as:
                    description: The local-AS feature allows a router to appear to be a member of a second autonomous system (AS), in addition
                      to its real AS. This feature can only be used for true eBGP peers.
                    type: int
                    required: false
                  local_as_options:
                    description: Local-as options; no-prepend - not prepend local-as to incoming updates from eBGP peers. replace-as - not prepend
                      true-as to outgoing updates to eBGP peers.
                    type: str
                  lockout:
                    description: BGP lockout feature is useful to inform/force its peer to avoid itself for any traffic for prefixes it has advertised
                      to its neighbors. When a BGP neighbor (or through peer group) is locked out 1 iBGP routes are refreshed to the iBGP peer(s)
                      with the path attribute changed to the lowest possible local preference (0) 2 eBGP routes advertised to the eBGP peer(s)
                      are refreshed with the path attribute changed to highest possible MED (4294967295).
                    type: bool
                    required: false
                  minimum_advertisement_interval:
                    description: Minimum route advertisement interval <0-65535> Minimum time which must elapse between subsequent UPDATE messages
                      relating to a common set of NLRI being transmitted to a peer. This timer is referred to as min-route-advertisement-interval-timer
                      by RFC 4721 and serves to reduce the number of UPDATE messages transmitted when a particular set of NLRI exhibit instability.
                    type: int
                    required: false
                  orf_mode:
                    description: Enables Outbound Router Filtering (ORF) and advertises the ORF capability to its neighbors. The ORFs send and
                      receive capabilities to lessen the number of updates exchanged between neighbors. By filtering updates, this option minimizes
                      generating and processing of updates.
                    type: str
                    required: false
                    choices:
                    - both
                    - receive
                    - send
                  passive:
                    description: Wait for peers to issue requests to open a BGP session, rather than initiating sessions from the local router.
                    type: bool
                    required: false
                  password:
                    description: Configures an MD5 authentication password for use with peering devices. Must not exceed 80 characters.
                    type: str
                    required: false
                  policy:
                    description: Routing policy to be attached to this peer.
                    type: list
                    elements: dict
                    suboptions:
                      direction:
                        description: The direction of application of the route map policy applies for the peer. (policy list key)
                        type: str
                        required: true
                        choices:
                        - in
                        - out
                      name:
                        description: Route map name associated with the leaf (policy list key)
                        type: str
                        required: true
                  prefix_limit:
                    description: Configure the maximum number of prefixes that will be accepted from a peer
                    type: dict
                    suboptions:
                      drop_excess:
                        description: Indicates the percentage of the maximum prefix-limit value, which when exceeded, the excess routes are dropped
                        type: float
                        required: false
                      idle_timeout:
                        description: Idle-timeout (minimum 1 to maximum 2400 minutes) specifies the time period after which the session is allowed
                          to re-establish. The value 0 represents no attempt to re-establish the session until a clear bgp neighbor command is
                          issued to manually re-establish the session.
                        type: int
                        required: false
                      maximum_prefixes:
                        description: Maximum number of prefixes <1-4294967295> Maximum number of prefixes that will be accepted from the neighbour
                        type: int
                        required: false
                      teardown_threshold:
                        description: Teardown percentage value <1-100> Warning messages are logged and alerted to the admin when the number of
                          prefixes exceeds this configured percentage of the maximum prefix limit.
                        type: float
                        required: false
                      warning_only:
                        description: Using this option does not teardown the session, but instead throws a notification warning that the threshold
                          has reached.
                        type: bool
                        required: false
                  prefix_list:
                    description: Container to attach prefix list to the neighbor
                    type: list
                    elements: dict
                    suboptions:
                      direction:
                        description: Direction of the filter (0=FILTER-IN |1=FILTER-OUT) (prefix-list list key)
                        type: str
                        required: true
                      name:
                        description: Prefix List name. specify a prefix list for filtering BGP advertisements. (prefix-list list key)
                        type: str
                        required: true
                  remote_as:
                    description: Remote AS number for this peer
                    type: int
                    required: true
                  remove_private_as:
                    description: Remove private AS numbers from the outbound updates and do not advertise these to the internet. This command
                      is used with eBgp peers only.
                    type: bool
                    required: false
                  route_reflector_client:
                    description: Configure the peer as a route reflector client.
                    type: bool
                    required: false
                  shutdown:
                    description: Enabling will terminate any active sessions and removes all associated routing information for the peer while
                      maintaining all the configuration associated with the peer. In addition, the specified peer transitions administratively
                      to idle state.
                    type: bool
                    required: false
                  site_origin_id:
                    description: Enable the site-of-origin (SOO) feature. If the customer AS is multi-homed to the ISP, this ensures that the
                      PE does not advertise the routes back to the same AS.
                    type: str
                    required: false
                  soft_reconfiguration_inbound:
                    description: Store updates for inbound soft reconfiguration. Soft-reconfiguration may be used in lieu of BGP route refresh
                      capability. Using this enables local storage of all the received routes and their attributes.
                    type: bool
                    required: false
                  unsuppress:
                    description: Selectively leak more-specific routes to a particular neighbor.
                    type: dict
                    suboptions:
                      policy:
                        description: Route map name associated with the leaf
                        type: str
                        required: false
                  update_source_interface:
                    description: Allows internal BGP sessions to use any operational interface for TCP connections
                    type: str
                    required: false
              redistribute:
                description: Inject routes from one routing process into another. Redistribution is used by routing protocols to advertise routes
                  that are learned by some other means, such as by another routing protocol or by static routes
                type: list
                elements: dict
                suboptions:
                  instance:
                    description: Redistribute the routes from a specific OSPF/ISIS instance
                    type: list
                    elements: dict
                    suboptions:
                      policy:
                        description: Routing Policy to apply during redistribution
                        type: str
                        required: false
                      tag:
                        description: Tag could be instance id of OSPFv2, OSPFv3 or ISIS (instance list key)
                        type: str
                        required: true
                  policy:
                    description: Routing Policy to apply during redistribution
                    type: str
                    required: false
                  protocol:
                    description: Protocol to redistribute into BGP (redistribute list key)
                    type: str
                    required: true
                    choices:
                    - kernel
                    - connected
                    - static
                    - rip
                    - isis
                    - ospf
              route_target:
                description: Route Target list that takes route target id and direction
                type: list
                elements: dict
                suboptions:
                  direction:
                    description: Route-target direction, that can be imported/exported for that particular route target id.
                    type: str
                    required: true
                    choices:
                    - import
                    - export
                    - both
                  id:
                    description: A route target is an 8-octet BGP extended community initially identifying a set of sites in a BGP VPN (RFC 4364).
                      However, it has since taken on a more general role in BGP route filtering. A route target consists of three fields; a 2-octet
                      type field, an administrator field, and an assigned number field. According to the data formats for type 0, 1, and 2 defined
                      in RFC4360 and RFC5668, the encoding pattern is defined as; 0;2-octet-asn;4-octet-number 1;4-octet-ipv4addr;2-octet-number
                      2;4-octet-asn;2-octet-number. Some valid examples are; 0;100;100, 1;1.1.1.1;100, and 2;65535;100. (route-target list key)
                    type: str
                    required: true
              safi:
                description: VRF SAFI type. Configure sub address family such as unicast (vrf-address-family list key)
                type: str
                required: true
                choices:
                - unicast
              segment_routing_srv6:
                description: No description available
                type: dict
                suboptions:
                  locator:
                    description: locator name
                    type: str
                    required: false
              synchronization:
                description: Perform IGP synchronization. Enables IGP synchronization of Internal BGP (iBGP) learned routes with the Internal
                  Gateway Protocol (IGP) system. Synchronization is used when a BGP router should not advertise routes learned from iBGP neighbors,
                  unless those routes are also present in an IGP (for example, OSPF).
                type: bool
                required: false
  state:
    description: The state of the configuration after module completion.
    type: str
    choices:
    - merged
    - deleted
    default: merged

"""
EXAMPLES = """
# Using merged

- name: Configure BGP
  ciena.saos10.saos10_bgp:
    config:
      - as: 65001
        address_family:
          - afi: ipv4
            safi: unicast
            network:
              - address: 192.168.1.0/24
    state: merged
# Using deleted

- name: Delete bgp
  ciena.saos10.saos10_bgp:
    state: deleted
    config:
      - as: 65001
"""

RETURN = """
before:
  description: The configuration prior to the model invocation.
  returned: always
  type: dict
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
after:
  description: The resulting configuration model invocation.
  returned: when changed
  type: dict
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
xml:
  description: The set of xml commands pushed to the remote device.
  returned: always
  type: list
  sample: ['<system xmlns="http://openconfig.net/yang/system"><config><hostname>foo</hostname></config></system>']
"""

from ansible.module_utils.basic import AnsibleModule
from ansible_collections.ciena.saos10.plugins.module_utils.network.saos10.argspec.bgp.bgp import (
    BgpArgs,
)
from ansible_collections.ciena.saos10.plugins.module_utils.network.saos10.config.bgp.bgp import (
    Bgp,
)


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=BgpArgs.argument_spec, supports_check_mode=True)

    result = Bgp(module).execute_module()
    module.exit_json(**result)


if __name__ == "__main__":
    main()
